<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A1a_label1" xml:space="preserve">
    <value>hello
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="B3user_newUser" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhAAEAAfcAACoqKzUyLy8vMDAwMTs2Mjc1M0M8MzMzNDU1Nj46Njc3ODg4OT07OUxDOVhKOjs7
        PEA9PD09PkdDPmVTPlBIPz8/QEhEQE9IQUFBQlZNQ25ZQ3NdQ0NDRERERFFLRV5SRkpIR2RWR2VYSElJ
        SWBVSXBeSYVpSVNOS21dS4ptS0tLTFdSTGhbTE1NTVlTTXViTX5nTY5wTmldT5ByT3xnUFFRUYRsUYpv
        UZN1UV5YUmpfUpd4U2JbVFVVVXJlVYtyVZt6VXlpVoZwV1hYWKB/WGtjWqOBWj9zW1tbXF1dXUB2XamF
        XYt2XqyIXkJ4X0NuYH5wYGFhYa2LYbGMYUVyY0R8Y5uKZKOOZGVlZY16ZZJ9ZZKIZUh1Zkl9ZpR/ZkaA
        ZrOQZoh4Z0iBZ4WGZ6GGZ0l3aEeCaICGaJqQaKGQaJWBaXmFaZSRaUmEanOFaouSa7WTa0x8bGWCbKaL
        bFN9bVGCbVqCbUuKbYOUbriWblCJb6WMb6+Tb36Ub06CcJ+JcE2OcLiXcFR+cXiVcVl/clSCclKNcqaO
        ck6QcqyScrKVc3KWc1qBdK6TdLqadFGTdWyXdVqJdmaYdraYdl6FeFeGeFmMeFeNeFSWeGiZeLeaeGCZ
        eb2deWOGelSaeluUe7ice5qWfL6ffGSIfVmbfb6gfWiJfmKSfsChfmOKgGOWgLKdgF2egMCjgGObgl6g
        gmCggsGkgsKmhWmchmmghsSnh8Ooh8Soh2uciGakiLSjicSpiXGeimqkisarjHOjjW2ojcasjaunjsiu
        j3OXkG+bkMiukHCbkXKjkbaokXmlknOrk8qxlHqslnWvmLiums21mnmum3yxnM+4noKjn9C5n4OmodG7
        ooWqo4O1pIirpry5q4q7rJG2sZK7sr6/tJPBtZq8upzDvMHFvae+wsTNyKvHybHFy63Ky6zSzbDNz7DS
        z7LM0LLR0rnN1L3S2cnZ2rva28DW3MHZ3sTa4cjd5crg5cfk6M3k687o7dDn7tDo79Ts9Njv9wAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQJAAD+ACwAAAAAAAEAAQAI/wD9CRxIsKDBgwgTKlzIsKHDhxAj
        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
        CwgAOw==
</value>
  </data>
</root>